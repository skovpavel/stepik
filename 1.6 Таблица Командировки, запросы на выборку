/*Задание
Вывести из таблицы trip информацию о командировках тех сотрудников, фамилия которых заканчивается на букву «а», в отсортированном по убыванию даты последнего дня командировки виде. В результат включить столбцы name, city, per_diem, date_first, date_last.*/
SELECT name, city, per_diem, date_first, date_last
FROM trip
WHERE name LIKE '%_а %'
ORDER BY date_last DESC;

/*Задание
Вывести в алфавитном порядке фамилии и инициалы тех сотрудников, которые были в командировке в Москве. */
SELECT DISTINCT name
FROM trip
WHERE city='Москва'
ORDER BY name;

/*Задание
Для каждого города посчитать, сколько раз сотрудники в нем были.  Информацию вывести в отсортированном в алфавитном порядке по названию городов. Вычисляемый столбец назвать Количество.*/
SELECT city, count(city) AS Количество
FROM trip
GROUP BY city
ORDER BY 1;

/*Задание
Вывести два города, в которых чаще всего были в командировках сотрудники. Вычисляемый столбец назвать Количество.*/
SELECT city, COUNT(*) AS 'Количество'
FROM trip
GROUP BY city
ORDER BY COUNT(*) DESC
LIMIT 2;

/*Задание
Вывести информацию о командировках во все города кроме Москвы и Санкт-Петербурга (фамилии и инициалы сотрудников, город ,  длительность командировки в днях, при этом первый и последний день относится к периоду командировки). Последний столбец назвать Длительность. Информацию вывести в упорядоченном по убыванию длительности поездки, а потом по убыванию названий городов (в обратном алфавитном порядке).

Немного теории
Для вычитания двух дат используется функция DATEDIFF(дата_1, дата_2), результатом которой является количество дней между дата_1 и дата_2. Например,

DATEDIFF('2020-04-01', '2020-03-28')=4

DATEDIFF('2020-05-09','2020-05-01')=8

DATEDIFF(date_last, date_first) */

SELECT name, city, DATEDIFF(date_last, date_first)+1 AS Длительность
FROM trip
WHERE city NOT IN('Москва','Санкт-Петербург')
ORDER BY 3 DESC, 2 DESC;

/*Задание
Вывести информацию о командировках сотрудника(ов), которые были самыми короткими по времени. В результат включить столбцы name, city, date_first, date_last */
SELECT name, city, date_first, date_last
FROM trip
WHERE (DATEDIFF(date_last, date_first)+1)=(SELECT MIN((DATEDIFF(date_last, date_first)+1)) FROM trip);

/*Задание
Вывести информацию о командировках, начало и конец которых относятся к одному месяцу (год может быть любой). В результат включить столбцы name, city, date_first, date_last. Строки отсортировать сначала  в алфавитном порядке по названию города, а затем по фамилии сотрудника .
Немного теории
Для того, чтобы выделить номер месяца из даты используется функция MONTH(дата).
Например, MONTH('2020-04-12') = 4.
Если определяется месяц для  значений столбца date_first, то используется запись MONTH(date_first) */
SELECT name, city, date_first, date_last
FROM trip
WHERE MONTH(date_first)=MONTH(date_last)
ORDER BY city, name;

/*Задание
Вывести название месяца и количество командировок для каждого месяца. Считаем, что командировка относится к некоторому месяцу, если она началась в этом месяце. Информацию вывести сначала в отсортированном по убыванию количества, а потом в алфавитном порядке по названию месяца виде. Название столбцов – Месяц и Количество.

Немного теории

Для того, чтобы выделить название месяца из даты используется функция MONTHNAME(дата), которая возвращает название месяца на английском языке для указанной даты. Например, MONTHNAME('2020-04-12')='April'.
Если группировка осуществляется по вычисляемому столбцу (в данном случае «вычисляется» название месяца), то после GROUP BYможно указать как вычисляемое выражение, так и имя столбца, заданное с помощью AS. Важно отметить, что последний вариант (указать имя столбца)  нарушает стандарт по порядку выполнения запросов, но иногда может встречаться на реальных платформах. */
SELECT MONTHNAME(date_first) AS Месяц, COUNT(name) AS Количество
FROM trip 
GROUP BY MONTHNAME(date_first)
ORDER BY 2 DESC, 1;

/*Задание
Вывести сумму суточных (произведение количества дней командировки и размера суточных) для командировок, первый день которых пришелся на февраль или март 2020 года. Значение суточных для каждой командировки занесено в столбец per_diem. Вывести фамилию и инициалы сотрудника, город, первый день командировки и сумму суточных. Последний столбец назвать Сумма. Информацию отсортировать сначала  в алфавитном порядке по фамилиям сотрудников, а затем по убыванию суммы суточных.*/
SELECT name, city, date_first, (DATEDIFF(date_last, date_first)+1)*per_diem AS Сумма
FROM trip
WHERE MONTH(date_first)=2 OR MONTH(date_first)=3
ORDER BY name, Сумма DESC;

/*Задание
Вывести фамилию с инициалами и общую сумму суточных, полученных за все командировки для тех сотрудников, которые были в командировках больше чем 3 раза, в отсортированном по убыванию сумм суточных виде. Последний столбец назвать Сумма.*/
SELECT name, SUM((DATEDIFF(date_last, date_first)+1)*per_diem) AS Сумма
FROM trip
GROUP BY name
HAVING COUNT(name)>3
ORDER BY Сумма DESC;

SELECT name, SUM((DATEDIFF(date_last,date_first)+1)*per_diem) AS 'Сумма'/*, COUNT(name) AS 'Raz'*/
FROM trip
GROUP BY name
HAVING COUNT(name)>3
ORDER BY Сумма DESC