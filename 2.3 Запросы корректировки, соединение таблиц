/*Задание
Для книг, которые уже есть на складе (в таблице book), но по другой цене, чем в поставке (supply),  необходимо в таблице book увеличить количество на значение, указанное в поставке,  и пересчитать цену. А в таблице  supply обнулить количество этих книг. Формула для пересчета цены:
*/
UPDATE book
INNER JOIN author USING(author_id)
INNER JOIN supply ON book.title=supply.title AND author.name_author=supply.author
SET book.amount=book.amount+supply.amount,
supply.amount=0,
book.price=(book.price*book.amount+supply.price*supply.amount)/(book.amount+supply.amount)
WHERE book.price<>supply.price

--comments
update book b
join author a on a.author_id=b.author_id
join supply s on b.title=s.title and a.name_author=s.author and b.price<>s.price
set b.amount=b.amount+s.amount,
s.amount=0,
b.price=(b.amount*b.price+s.amount*s.price)/(b.amount+s.amount);

/*Задание
Включить новых авторов в таблицу author с помощью запроса на добавление, а затем вывести все данные из таблицы author.  Новыми считаются авторы, которые есть в таблице supply, но нет в таблице author.
*/
INSERT INTO author(name_author)
SELECT supply.author
FROM author
RIGHT JOIN supply ON author.name_author=supply.author
WHERE name_author IS NULL;

SELECT *
FROM author;

/*Задание
Добавить новые книги из таблицы supply в таблицу book на основе сформированного выше запроса. Затем вывести для просмотра таблицу book.*/
INSERT INTO book (title, author_id, price, amount)
SELECT title, author_id, price, amount
FROM author a
INNER JOIN supply s ON a.name_author=s.author
WHERE amount<>0;

SELECT *
FROM book;

/*comments 
Как по мне, стоит абстрагироваться от amount <> 0, как как это условие  будет верно в этом и только этом примере. */
Лучше проверять, есть ли такая книга с таким автором в supply, но её нету в  book
INSERT INTO book(title, author_id, price, amount)
    SELECT title, author_id, price, amount
    FROM author INNER JOIN supply
        ON supply.author = author.name_author
    WHERE
        (title, author_id) NOT IN (
        SELECT title, author_id
        FROM book);
        
SELECT * FROM book;

/*Задание
 Занести для книги «Стихотворения и поэмы» Лермонтова жанр «Поэзия», а для книги «Остров сокровищ» Стивенсона - «Приключения». (Использовать два запроса). */
UPDATE book
SET genre_id =
(
    SELECT genre_id
    FROM genre
    WHERE name_genre='Поэзия'
    )
WHERE title='Стихотворения и поэмы' 
AND author_id=(
    SELECT author_id
    FROM author
    WHERE name_author='Лермонтов М.Ю.'
    );

UPDATE book
SET genre_id =
(
    SELECT genre_id
    FROM genre
    WHERE name_genre='Приключения'
    )
WHERE title='Остров сокровищ' 
AND author_id=(
    SELECT author_id
    FROM author
    WHERE name_author='Стивенсон Р.Л.'
    );
    
    SELECT *
    FROM book;

--comments
UPDATE book
INNER JOIN author
ON book.author_id = author.author_id
SET genre_id = (SELECT genre_id FROM genre WHERE name_genre = 'Поэзия')
WHERE title = "Стихотворения и поэмы" AND name_author LIKE "%Лермонтов%";

UPDATE book
INNER JOIN author
ON book.author_id = author.author_id
SET genre_id = (SELECT genre_id FROM genre WHERE name_genre = 'Приключения')
WHERE title = "Остров сокровищ" AND name_author LIKE "%Стивенсон%";
